#! /bin/sh

##
# aludo
#
#	Capture notable clues of incremental system changes
#	to help trigger data collection, as a hint to lead
#	to a later support assessment
#
#	NOTE: Translate aludo from Esperanto to English -> hint
##

# Usage
#	
#if [ "$1" = "--help" ] || \
#	[ "$1" = "help" ] || \
#	[ "$1" = "-h" ] || \
#  then
#        echo "Usage: `basename $0` [ -v | --verbose ]"
#        exit 1
#fi

# Invocation
#	should be run as root (or via sudo)
if [ "$UID" != "0" ]
  then
	echo "Requires root (or sudo) privileges to run $0" >&2
        exit 1
fi

# Initialize key names/values
export focus=""
export entryCMD=""
export status=""

# Configuration parameters / files
CF=/usr/etc/aludo.conf
[ -r ${CF} ] && source ${CF}
CF=/etc/aludo.conf
[ -r ${CF} ] && source ${CF}
CF=./aludo.conf
[ -r ${CF} ] && source ${CF}

# If clues/hints are found, group into a given timestamp location
#	comparing as deltas to a previous run
export reportTimestamp=$(date +"%Y-%m-%dT%H:%M:%S")
export runTimestamp=$(date -d ${reportTimestamp} +%s)
echo ${reportTimestamp} ${runTimestamp}

# Prepare collection directory
if [ -d ${collectionDir} ]
  then
	if [ $(ls ${collectionDir} | wc -l 2>/dev/null) -ne 0 ]
	  then
		export lastTimestamp=$(date -d `ls ${collectionDir} | tail -1` +%s)
		export prevDate=$(echo ${lastTimestamp} | cut -f1 -d'T')
        	export prevTime=$(echo ${lastTimestamp} | cut -f2 -d'T')
	  else
		export lastTimestamp=0
		export prevDate=0
		export prevTime=0
        fi
  else
	mkdir -p ${collectionDir}
fi
mkdir -p ${collectionDir}/${reportTimestamp}
export LF="${collectionDir}/${reportTimestamp}/${logFile}" && \
	touch ${LF}
echo "Hints" > ${collectionDir}/${reportTimestamp}/${reportFile}

##
# look for clues
##
for focus in $(ls ${functionDir})
  do
	echo "# ===== Focus =====" >>${LF} && \
	echo "# ${focus}" >>${LF}
  	entryCMD="${focus}"
  	if which ${entryCMD} >/dev/null 2>&1 && grep ${entryCMD} /etc/fstab >/dev/null 2>&1
	  then
		status=maybe && echo "## status=${status}" >>${LF}
		source ${functionDir}/${focus}
		identify
		if [ ${status} = "true" ] 
		  then
			setup
			acquire
			evaluate
			cleanup
			admission
		fi
	fi
  done		

# gather relevant clues/evidence 
hints=$(cat ${collectionDir}/${reportTimestamp}/${reportFile} | wc -l 2>&1)
if [ ${hints} -gt 1 ]
  then
	echo "See ... "
	echo "- Hints :"
       	echo "  ${collectionDir}/${reportTimestamp}/${reportFile}"
	cd ${collectionDir}
	ln -s ${reportTimestamp} ${runTimestamp}

        # gather supportconfig
	which supportconfig >/dev/null 2>&1 && supportconfig -R ${runTimestamp} >>${LF} 2>&1
	
	# bundle results
	tar -czf ${runTimestamp}.tgz ${runTimestamp}/* >>${LF} 2>&1 && \
		echo "- Log File :"
		echo "  ${LF}" && \
		echo "- Collected Data :"
      	 	echo "  ${collectionDir}/${runTimestamp}.tgz"
  else
	echo "No recent hints found, review ..." >/dev/stderr
	echo "- Log File :" >/dev/stderr
	echo "  ${LF}" >/dev/stderr
	exit 1

fi
